
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  documentId: 'documentId',
  email: 'email',
  phone: 'phone',
  whatsapp: 'whatsapp',
  address: 'address',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  birthDate: 'birthDate',
  notes: 'notes',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VehicleScalarFieldEnum = {
  id: 'id',
  customerId: 'customerId',
  brand: 'brand',
  model: 'model',
  year: 'year',
  color: 'color',
  plate: 'plate',
  chassisId: 'chassisId',
  fuelType: 'fuelType',
  mileage: 'mileage',
  notes: 'notes',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SupplierScalarFieldEnum = {
  id: 'id',
  tradeName: 'tradeName',
  companyName: 'companyName',
  documentId: 'documentId',
  email: 'email',
  phone: 'phone',
  address: 'address',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  salesContact: 'salesContact',
  paymentTermDays: 'paymentTermDays',
  notes: 'notes',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  documentId: 'documentId',
  email: 'email',
  phone: 'phone',
  position: 'position',
  salary: 'salary',
  commissionPercent: 'commissionPercent',
  hireDate: 'hireDate',
  terminationDate: 'terminationDate',
  address: 'address',
  pixKey: 'pixKey',
  notes: 'notes',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  description: 'description',
  isActive: 'isActive',
  createdAt: 'createdAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  categoryId: 'categoryId',
  internalCode: 'internalCode',
  barcode: 'barcode',
  name: 'name',
  description: 'description',
  brand: 'brand',
  unit: 'unit',
  costPrice: 'costPrice',
  salePrice: 'salePrice',
  profitMargin: 'profitMargin',
  currentStock: 'currentStock',
  minimumStock: 'minimumStock',
  maximumStock: 'maximumStock',
  location: 'location',
  ncmCode: 'ncmCode',
  notes: 'notes',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ServiceScalarFieldEnum = {
  id: 'id',
  categoryId: 'categoryId',
  name: 'name',
  description: 'description',
  price: 'price',
  estimatedTimeMinutes: 'estimatedTimeMinutes',
  mechanicCommission: 'mechanicCommission',
  notes: 'notes',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StockMovementScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  movementType: 'movementType',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  totalValue: 'totalValue',
  documentNumber: 'documentNumber',
  notes: 'notes',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.ServiceOrderScalarFieldEnum = {
  id: 'id',
  orderNumber: 'orderNumber',
  customerId: 'customerId',
  vehicleId: 'vehicleId',
  responsibleEmployeeId: 'responsibleEmployeeId',
  entryDate: 'entryDate',
  expectedDeliveryDate: 'expectedDeliveryDate',
  deliveryDate: 'deliveryDate',
  vehicleMileage: 'vehicleMileage',
  reportedProblem: 'reportedProblem',
  executedServices: 'executedServices',
  internalNotes: 'internalNotes',
  customerNotes: 'customerNotes',
  status: 'status',
  priority: 'priority',
  totalValue: 'totalValue',
  discountValue: 'discountValue',
  finalValue: 'finalValue',
  warrantyDays: 'warrantyDays',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.ServiceOrderServiceScalarFieldEnum = {
  id: 'id',
  serviceOrderId: 'serviceOrderId',
  serviceId: 'serviceId',
  employeeId: 'employeeId',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  totalPrice: 'totalPrice',
  additionalDescription: 'additionalDescription',
  executionDate: 'executionDate',
  executionTimeMinutes: 'executionTimeMinutes',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.ServiceOrderProductScalarFieldEnum = {
  id: 'id',
  serviceOrderId: 'serviceOrderId',
  productId: 'productId',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  totalPrice: 'totalPrice',
  additionalDescription: 'additionalDescription',
  isApplied: 'isApplied',
  applicationDate: 'applicationDate',
  createdAt: 'createdAt'
};

exports.Prisma.PaymentMethodScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  feePercent: 'feePercent',
  receiveDays: 'receiveDays',
  isActive: 'isActive'
};

exports.Prisma.SaleScalarFieldEnum = {
  id: 'id',
  saleNumber: 'saleNumber',
  serviceOrderId: 'serviceOrderId',
  customerId: 'customerId',
  employeeId: 'employeeId',
  saleDate: 'saleDate',
  grossValue: 'grossValue',
  discountValue: 'discountValue',
  netValue: 'netValue',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt'
};

exports.Prisma.ReceivableScalarFieldEnum = {
  id: 'id',
  saleId: 'saleId',
  paymentMethodId: 'paymentMethodId',
  installmentNumber: 'installmentNumber',
  value: 'value',
  dueDate: 'dueDate',
  paymentDate: 'paymentDate',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt'
};

exports.Prisma.AccountPayableScalarFieldEnum = {
  id: 'id',
  supplierId: 'supplierId',
  employeeId: 'employeeId',
  description: 'description',
  category: 'category',
  value: 'value',
  dueDate: 'dueDate',
  paymentDate: 'paymentDate',
  paymentMethod: 'paymentMethod',
  documentNumber: 'documentNumber',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt'
};

exports.Prisma.AppointmentScalarFieldEnum = {
  id: 'id',
  customerId: 'customerId',
  vehicleId: 'vehicleId',
  employeeId: 'employeeId',
  appointmentDate: 'appointmentDate',
  expectedEndDate: 'expectedEndDate',
  requestedService: 'requestedService',
  notes: 'notes',
  status: 'status',
  reminderSent: 'reminderSent',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.FuelType = exports.$Enums.FuelType = {
  GASOLINE: 'GASOLINE',
  ETHANOL: 'ETHANOL',
  FLEX: 'FLEX',
  DIESEL: 'DIESEL',
  CNG: 'CNG',
  ELECTRIC: 'ELECTRIC',
  HYBRID: 'HYBRID'
};

exports.Position = exports.$Enums.Position = {
  MECHANIC: 'MECHANIC',
  TIRE_TECHNICIAN: 'TIRE_TECHNICIAN',
  ATTENDANT: 'ATTENDANT',
  MANAGER: 'MANAGER',
  OWNER: 'OWNER'
};

exports.CategoryType = exports.$Enums.CategoryType = {
  PRODUCT: 'PRODUCT',
  SERVICE: 'SERVICE',
  BOTH: 'BOTH'
};

exports.Unit = exports.$Enums.Unit = {
  PIECE: 'PIECE',
  KILOGRAM: 'KILOGRAM',
  LITER: 'LITER',
  METER: 'METER',
  SQUARE_METER: 'SQUARE_METER',
  BOX: 'BOX',
  PAIR: 'PAIR'
};

exports.MovementType = exports.$Enums.MovementType = {
  IN: 'IN',
  OUT: 'OUT',
  ADJUSTMENT: 'ADJUSTMENT',
  RETURN: 'RETURN'
};

exports.ServiceOrderStatus = exports.$Enums.ServiceOrderStatus = {
  OPEN: 'OPEN',
  IN_PROGRESS: 'IN_PROGRESS',
  WAITING_PARTS: 'WAITING_PARTS',
  WAITING_CUSTOMER: 'WAITING_CUSTOMER',
  COMPLETED: 'COMPLETED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED'
};

exports.Priority = exports.$Enums.Priority = {
  LOW: 'LOW',
  NORMAL: 'NORMAL',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.ServiceStatus = exports.$Enums.ServiceStatus = {
  PENDING: 'PENDING',
  IN_EXECUTION: 'IN_EXECUTION',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.PaymentType = exports.$Enums.PaymentType = {
  CASH: 'CASH',
  DEBIT_CARD: 'DEBIT_CARD',
  CREDIT_CARD: 'CREDIT_CARD',
  PIX: 'PIX',
  BANK_TRANSFER: 'BANK_TRANSFER',
  CHECK: 'CHECK',
  INSTALLMENT_PLAN: 'INSTALLMENT_PLAN'
};

exports.SaleStatus = exports.$Enums.SaleStatus = {
  OPEN: 'OPEN',
  PAID: 'PAID',
  PARTIALLY_PAID: 'PARTIALLY_PAID',
  CANCELLED: 'CANCELLED'
};

exports.ReceivableStatus = exports.$Enums.ReceivableStatus = {
  PENDING: 'PENDING',
  RECEIVED: 'RECEIVED',
  OVERDUE: 'OVERDUE',
  CANCELLED: 'CANCELLED'
};

exports.PayableCategory = exports.$Enums.PayableCategory = {
  SUPPLIER: 'SUPPLIER',
  SALARY: 'SALARY',
  COMMISSION: 'COMMISSION',
  RENT: 'RENT',
  ELECTRICITY: 'ELECTRICITY',
  WATER: 'WATER',
  PHONE: 'PHONE',
  INTERNET: 'INTERNET',
  TAXES: 'TAXES',
  OTHERS: 'OTHERS'
};

exports.PayableStatus = exports.$Enums.PayableStatus = {
  PENDING: 'PENDING',
  PAID: 'PAID',
  OVERDUE: 'OVERDUE',
  CANCELLED: 'CANCELLED'
};

exports.AppointmentStatus = exports.$Enums.AppointmentStatus = {
  SCHEDULED: 'SCHEDULED',
  CONFIRMED: 'CONFIRMED',
  IN_SERVICE: 'IN_SERVICE',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  NO_SHOW: 'NO_SHOW'
};

exports.Prisma.ModelName = {
  User: 'User',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification',
  Customer: 'Customer',
  Vehicle: 'Vehicle',
  Supplier: 'Supplier',
  Employee: 'Employee',
  Category: 'Category',
  Product: 'Product',
  Service: 'Service',
  StockMovement: 'StockMovement',
  ServiceOrder: 'ServiceOrder',
  ServiceOrderService: 'ServiceOrderService',
  ServiceOrderProduct: 'ServiceOrderProduct',
  PaymentMethod: 'PaymentMethod',
  Sale: 'Sale',
  Receivable: 'Receivable',
  AccountPayable: 'AccountPayable',
  Appointment: 'Appointment'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "E:\\open source\\oficina\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "E:\\open source\\oficina\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// SCHEMA PRISMA PARA OFICINA MECÂNICA & SERVIÇOS DE PNEUS\n// Sistema completo para painel de gerenciamento\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// =============================================\n// AUTENTICAÇÃO & USUÁRIOS\n// =============================================\n\nmodel User {\n  id            String    @id\n  name          String\n  email         String\n  emailVerified Boolean   @default(false)\n  image         String?\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @default(now()) @updatedAt\n  sessions      Session[]\n  accounts      Account[]\n\n  // Relacionamentos com sistema da oficina\n  salesAsEmployee            Sale[]                @relation(\"SaleEmployee\")\n  serviceOrdersAsResponsible ServiceOrder[]\n  serviceOrderServices       ServiceOrderService[] @relation(\"ServiceOrderServiceEmployee\")\n  appointments               Appointment[]         @relation(\"AppointmentUser\")\n  stockMovements             StockMovement[]\n  accountsPayable            AccountPayable[]      @relation(\"AccountPayableUser\")\n\n  @@unique([email])\n  @@map(\"users\")\n}\n\nmodel Session {\n  id        String   @id\n  expiresAt DateTime\n  token     String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  ipAddress String?\n  userAgent String?\n  userId    String\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([token])\n  @@map(\"sessions\")\n}\n\nmodel Account {\n  id                    String    @id\n  accountId             String\n  providerId            String\n  userId                String\n  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  accessToken           String?\n  refreshToken          String?\n  idToken               String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  password              String?\n  createdAt             DateTime  @default(now())\n  updatedAt             DateTime  @updatedAt\n\n  @@map(\"accounts\")\n}\n\nmodel Verification {\n  id         String   @id\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @default(now()) @updatedAt\n\n  @@map(\"verifications\")\n}\n\n// =============================================\n// CADASTROS BÁSICOS\n// =============================================\n\nmodel Customer {\n  id         String    @id @default(cuid())\n  name       String\n  documentId String?   @unique // CPF/CNPJ\n  email      String?\n  phone      String?\n  whatsapp   String?\n  address    String?\n  city       String?\n  state      String?\n  zipCode    String?\n  birthDate  DateTime?\n  notes      String?\n  isActive   Boolean   @default(true)\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n\n  // Relacionamentos\n  vehicles      Vehicle[]\n  serviceOrders ServiceOrder[]\n  sales         Sale[]\n  appointments  Appointment[]\n\n  @@index([documentId])\n  @@index([name])\n  @@index([phone])\n  @@map(\"customers\")\n}\n\nmodel Vehicle {\n  id         String    @id @default(cuid())\n  customerId String\n  brand      String\n  model      String\n  year       Int?\n  color      String?\n  plate      String    @unique\n  chassisId  String?\n  fuelType   FuelType?\n  mileage    Int       @default(0)\n  notes      String?\n  isActive   Boolean   @default(true)\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n\n  // Relacionamentos\n  customer      Customer       @relation(fields: [customerId], references: [id], onDelete: Cascade)\n  serviceOrders ServiceOrder[]\n  appointments  Appointment[]\n\n  @@index([plate])\n  @@index([customerId])\n  @@index([brand, model])\n  @@map(\"vehicles\")\n}\n\nenum FuelType {\n  GASOLINE\n  ETHANOL\n  FLEX\n  DIESEL\n  CNG\n  ELECTRIC\n  HYBRID\n}\n\nmodel Supplier {\n  id              String   @id @default(cuid())\n  tradeName       String\n  companyName     String?\n  documentId      String?  @unique // CNPJ\n  email           String?\n  phone           String?\n  address         String?\n  city            String?\n  state           String?\n  zipCode         String?\n  salesContact    String?\n  paymentTermDays Int      @default(30)\n  notes           String?\n  isActive        Boolean  @default(true)\n  createdAt       DateTime @default(now())\n  updatedAt       DateTime @updatedAt\n\n  // Relacionamentos\n  accountsPayable AccountPayable[]\n\n  @@index([documentId])\n  @@index([tradeName])\n  @@map(\"suppliers\")\n}\n\nmodel Employee {\n  id                String    @id @default(cuid())\n  name              String\n  documentId        String?   @unique // CPF\n  email             String?\n  phone             String?\n  position          Position\n  salary            Decimal?  @db.Decimal(10, 2)\n  commissionPercent Decimal   @default(0) @db.Decimal(5, 2)\n  hireDate          DateTime?\n  terminationDate   DateTime?\n  address           String?\n  pixKey            String?\n  notes             String?\n  isActive          Boolean   @default(true)\n  createdAt         DateTime  @default(now())\n  updatedAt         DateTime  @updatedAt\n\n  // Relacionamentos\n  serviceOrdersAsResponsible ServiceOrder[] @relation(\"ResponsibleEmployee\")\n\n  @@index([documentId])\n  @@index([position])\n  @@index([isActive])\n  @@map(\"employees\")\n}\n\nenum Position {\n  MECHANIC\n  TIRE_TECHNICIAN\n  ATTENDANT\n  MANAGER\n  OWNER\n}\n\n// =============================================\n// PRODUTOS & GESTÃO DE ESTOQUE\n// =============================================\n\nmodel Category {\n  id          String       @id @default(cuid())\n  name        String\n  type        CategoryType @default(BOTH)\n  description String?\n  isActive    Boolean      @default(true)\n  createdAt   DateTime     @default(now())\n\n  // Relacionamentos\n  products Product[]\n  services Service[]\n\n  @@index([type])\n  @@map(\"categories\")\n}\n\nenum CategoryType {\n  PRODUCT\n  SERVICE\n  BOTH\n}\n\nmodel Product {\n  id           String   @id @default(cuid())\n  categoryId   String?\n  internalCode String?  @unique\n  barcode      String?\n  name         String\n  description  String?\n  brand        String?\n  unit         Unit     @default(PIECE)\n  costPrice    Decimal  @db.Decimal(10, 2)\n  salePrice    Decimal  @db.Decimal(10, 2)\n  profitMargin Decimal  @db.Decimal(5, 2)\n  currentStock Int      @default(0)\n  minimumStock Int      @default(0)\n  maximumStock Int      @default(0)\n  location     String?\n  ncmCode      String?\n  notes        String?\n  isActive     Boolean  @default(true)\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // Relacionamentos\n  category          Category?             @relation(fields: [categoryId], references: [id])\n  stockMovements    StockMovement[]\n  serviceOrderItems ServiceOrderProduct[]\n\n  @@index([internalCode])\n  @@index([barcode])\n  @@index([name])\n  @@index([categoryId])\n  @@index([minimumStock, currentStock])\n  @@map(\"products\")\n}\n\nenum Unit {\n  PIECE\n  KILOGRAM\n  LITER\n  METER\n  SQUARE_METER\n  BOX\n  PAIR\n}\n\nmodel Service {\n  id                   String   @id @default(cuid())\n  categoryId           String?\n  name                 String\n  description          String?\n  price                Decimal  @db.Decimal(10, 2)\n  estimatedTimeMinutes Int?\n  mechanicCommission   Decimal  @default(0) @db.Decimal(5, 2)\n  notes                String?\n  isActive             Boolean  @default(true)\n  createdAt            DateTime @default(now())\n  updatedAt            DateTime @updatedAt\n\n  // Relacionamentos\n  category             Category?             @relation(fields: [categoryId], references: [id])\n  serviceOrderServices ServiceOrderService[]\n\n  @@index([name])\n  @@index([categoryId])\n  @@map(\"services\")\n}\n\nmodel StockMovement {\n  id             String       @id @default(cuid())\n  productId      String\n  movementType   MovementType\n  quantity       Int\n  unitPrice      Decimal?     @db.Decimal(10, 2)\n  totalValue     Decimal?     @db.Decimal(10, 2)\n  documentNumber String?\n  notes          String?\n  userId         String?\n  createdAt      DateTime     @default(now())\n\n  // Relacionamentos\n  product Product @relation(fields: [productId], references: [id])\n  user    User?   @relation(fields: [userId], references: [id])\n\n  @@index([productId, createdAt])\n  @@index([movementType, createdAt])\n  @@map(\"stock_movements\")\n}\n\nenum MovementType {\n  IN\n  OUT\n  ADJUSTMENT\n  RETURN\n}\n\n// =============================================\n// ORDENS DE SERVIÇO\n// =============================================\n\nmodel ServiceOrder {\n  id                    String             @id @default(cuid())\n  orderNumber           String             @unique\n  customerId            String\n  vehicleId             String\n  responsibleEmployeeId String?\n  entryDate             DateTime           @default(now())\n  expectedDeliveryDate  DateTime?\n  deliveryDate          DateTime?\n  vehicleMileage        Int?\n  reportedProblem       String?\n  executedServices      String?\n  internalNotes         String?\n  customerNotes         String?\n  status                ServiceOrderStatus @default(OPEN)\n  priority              Priority           @default(NORMAL)\n  totalValue            Decimal            @default(0) @db.Decimal(10, 2)\n  discountValue         Decimal            @default(0) @db.Decimal(10, 2)\n  finalValue            Decimal            @default(0) @db.Decimal(10, 2)\n  warrantyDays          Int                @default(30)\n  createdAt             DateTime           @default(now())\n  updatedAt             DateTime           @updatedAt\n\n  // Relacionamentos\n  customer            Customer              @relation(fields: [customerId], references: [id])\n  vehicle             Vehicle               @relation(fields: [vehicleId], references: [id])\n  responsibleEmployee Employee?             @relation(\"ResponsibleEmployee\", fields: [responsibleEmployeeId], references: [id])\n  services            ServiceOrderService[]\n  products            ServiceOrderProduct[]\n  sales               Sale[]\n  User                User?                 @relation(fields: [userId], references: [id])\n  userId              String?\n\n  @@index([orderNumber])\n  @@index([status, entryDate])\n  @@index([customerId, vehicleId])\n  @@index([responsibleEmployeeId, entryDate])\n  @@map(\"service_orders\")\n}\n\nenum ServiceOrderStatus {\n  OPEN\n  IN_PROGRESS\n  WAITING_PARTS\n  WAITING_CUSTOMER\n  COMPLETED\n  DELIVERED\n  CANCELLED\n}\n\nenum Priority {\n  LOW\n  NORMAL\n  HIGH\n  URGENT\n}\n\nmodel ServiceOrderService {\n  id                    String        @id @default(cuid())\n  serviceOrderId        String\n  serviceId             String\n  employeeId            String?\n  quantity              Decimal       @default(1) @db.Decimal(10, 2)\n  unitPrice             Decimal       @db.Decimal(10, 2)\n  totalPrice            Decimal       @db.Decimal(10, 2)\n  additionalDescription String?\n  executionDate         DateTime?\n  executionTimeMinutes  Int?\n  status                ServiceStatus @default(PENDING)\n  createdAt             DateTime      @default(now())\n\n  // Relacionamentos\n  serviceOrder ServiceOrder @relation(fields: [serviceOrderId], references: [id], onDelete: Cascade)\n  service      Service      @relation(fields: [serviceId], references: [id])\n  employee     User?        @relation(\"ServiceOrderServiceEmployee\", fields: [employeeId], references: [id])\n\n  @@index([serviceOrderId])\n  @@index([employeeId, executionDate])\n  @@map(\"service_order_services\")\n}\n\nenum ServiceStatus {\n  PENDING\n  IN_EXECUTION\n  COMPLETED\n  CANCELLED\n}\n\nmodel ServiceOrderProduct {\n  id                    String    @id @default(cuid())\n  serviceOrderId        String\n  productId             String\n  quantity              Int\n  unitPrice             Decimal   @db.Decimal(10, 2)\n  totalPrice            Decimal   @db.Decimal(10, 2)\n  additionalDescription String?\n  isApplied             Boolean   @default(false)\n  applicationDate       DateTime?\n  createdAt             DateTime  @default(now())\n\n  // Relacionamentos\n  serviceOrder ServiceOrder @relation(fields: [serviceOrderId], references: [id], onDelete: Cascade)\n  product      Product      @relation(fields: [productId], references: [id])\n\n  @@index([serviceOrderId])\n  @@index([productId])\n  @@map(\"service_order_products\")\n}\n\n// =============================================\n// FINANCEIRO\n// =============================================\n\nmodel PaymentMethod {\n  id          String      @id @default(cuid())\n  name        String\n  type        PaymentType\n  feePercent  Decimal     @default(0) @db.Decimal(5, 2)\n  receiveDays Int         @default(0) // Days to receive payment\n  isActive    Boolean     @default(true)\n\n  // Relacionamentos\n  receivables Receivable[]\n\n  @@index([type])\n  @@map(\"payment_methods\")\n}\n\nenum PaymentType {\n  CASH\n  DEBIT_CARD\n  CREDIT_CARD\n  PIX\n  BANK_TRANSFER\n  CHECK\n  INSTALLMENT_PLAN\n}\n\nmodel Sale {\n  id             String     @id @default(cuid())\n  saleNumber     String?    @unique\n  serviceOrderId String?\n  customerId     String\n  employeeId     String?\n  saleDate       DateTime   @default(now())\n  grossValue     Decimal    @db.Decimal(10, 2)\n  discountValue  Decimal    @default(0) @db.Decimal(10, 2)\n  netValue       Decimal    @db.Decimal(10, 2)\n  status         SaleStatus @default(OPEN)\n  notes          String?\n  createdAt      DateTime   @default(now())\n\n  // Relacionamentos\n  serviceOrder ServiceOrder? @relation(fields: [serviceOrderId], references: [id])\n  customer     Customer      @relation(fields: [customerId], references: [id])\n  employee     User?         @relation(\"SaleEmployee\", fields: [employeeId], references: [id])\n  receivables  Receivable[]\n\n  @@index([saleDate])\n  @@index([status])\n  @@index([customerId, saleDate])\n  @@map(\"sales\")\n}\n\nenum SaleStatus {\n  OPEN\n  PAID\n  PARTIALLY_PAID\n  CANCELLED\n}\n\nmodel Receivable {\n  id                String           @id @default(cuid())\n  saleId            String\n  paymentMethodId   String\n  installmentNumber Int              @default(1)\n  value             Decimal          @db.Decimal(10, 2)\n  dueDate           DateTime\n  paymentDate       DateTime?\n  status            ReceivableStatus @default(PENDING)\n  notes             String?\n  createdAt         DateTime         @default(now())\n\n  // Relacionamentos\n  sale          Sale          @relation(fields: [saleId], references: [id], onDelete: Cascade)\n  paymentMethod PaymentMethod @relation(fields: [paymentMethodId], references: [id])\n\n  @@index([dueDate, status])\n  @@index([saleId])\n  @@map(\"receivables\")\n}\n\nenum ReceivableStatus {\n  PENDING\n  RECEIVED\n  OVERDUE\n  CANCELLED\n}\n\nmodel AccountPayable {\n  id             String          @id @default(cuid())\n  supplierId     String?\n  employeeId     String?\n  description    String\n  category       PayableCategory\n  value          Decimal         @db.Decimal(10, 2)\n  dueDate        DateTime\n  paymentDate    DateTime?\n  paymentMethod  String?\n  documentNumber String?\n  status         PayableStatus   @default(PENDING)\n  notes          String?\n  createdAt      DateTime        @default(now())\n\n  // Relacionamentos\n  supplier Supplier? @relation(fields: [supplierId], references: [id])\n  user     User?     @relation(\"AccountPayableUser\", fields: [employeeId], references: [id])\n\n  @@index([dueDate, status])\n  @@index([category])\n  @@index([supplierId])\n  @@map(\"accounts_payable\")\n}\n\nenum PayableCategory {\n  SUPPLIER\n  SALARY\n  COMMISSION\n  RENT\n  ELECTRICITY\n  WATER\n  PHONE\n  INTERNET\n  TAXES\n  OTHERS\n}\n\nenum PayableStatus {\n  PENDING\n  PAID\n  OVERDUE\n  CANCELLED\n}\n\n// =============================================\n// AGENDAMENTOS\n// =============================================\n\nmodel Appointment {\n  id               String            @id @default(cuid())\n  customerId       String\n  vehicleId        String?\n  employeeId       String?\n  appointmentDate  DateTime\n  expectedEndDate  DateTime?\n  requestedService String?\n  notes            String?\n  status           AppointmentStatus @default(SCHEDULED)\n  reminderSent     Boolean           @default(false)\n  createdAt        DateTime          @default(now())\n  updatedAt        DateTime          @updatedAt\n\n  // Relacionamentos\n  customer Customer @relation(fields: [customerId], references: [id])\n  vehicle  Vehicle? @relation(fields: [vehicleId], references: [id])\n  user     User?    @relation(\"AppointmentUser\", fields: [employeeId], references: [id])\n\n  @@index([appointmentDate, status])\n  @@index([employeeId, appointmentDate])\n  @@map(\"appointments\")\n}\n\nenum AppointmentStatus {\n  SCHEDULED\n  CONFIRMED\n  IN_SERVICE\n  COMPLETED\n  CANCELLED\n  NO_SHOW\n}\n",
  "inlineSchemaHash": "7ada30bfdbeac401208dbdddd95a4017d44342ca58ea430f7c2c9e6a7a38b25e",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"salesAsEmployee\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"SaleEmployee\"},{\"name\":\"serviceOrdersAsResponsible\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceOrderToUser\"},{\"name\":\"serviceOrderServices\",\"kind\":\"object\",\"type\":\"ServiceOrderService\",\"relationName\":\"ServiceOrderServiceEmployee\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentUser\"},{\"name\":\"stockMovements\",\"kind\":\"object\",\"type\":\"StockMovement\",\"relationName\":\"StockMovementToUser\"},{\"name\":\"accountsPayable\",\"kind\":\"object\",\"type\":\"AccountPayable\",\"relationName\":\"AccountPayableUser\"}],\"dbName\":\"users\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":\"sessions\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"accounts\"},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verifications\"},\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"whatsapp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"vehicles\",\"kind\":\"object\",\"type\":\"Vehicle\",\"relationName\":\"CustomerToVehicle\"},{\"name\":\"serviceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"CustomerToServiceOrder\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"CustomerToSale\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToCustomer\"}],\"dbName\":\"customers\"},\"Vehicle\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"year\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chassisId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fuelType\",\"kind\":\"enum\",\"type\":\"FuelType\"},{\"name\":\"mileage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToVehicle\"},{\"name\":\"serviceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceOrderToVehicle\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToVehicle\"}],\"dbName\":\"vehicles\"},\"Supplier\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tradeName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"salesContact\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentTermDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"accountsPayable\",\"kind\":\"object\",\"type\":\"AccountPayable\",\"relationName\":\"AccountPayableToSupplier\"}],\"dbName\":\"suppliers\"},\"Employee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"enum\",\"type\":\"Position\"},{\"name\":\"salary\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"commissionPercent\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"hireDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"terminationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pixKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"serviceOrdersAsResponsible\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ResponsibleEmployee\"}],\"dbName\":\"employees\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"CategoryType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"CategoryToService\"}],\"dbName\":\"categories\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"internalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"barcode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unit\",\"kind\":\"enum\",\"type\":\"Unit\"},{\"name\":\"costPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"salePrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"profitMargin\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currentStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"minimumStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maximumStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ncmCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"stockMovements\",\"kind\":\"object\",\"type\":\"StockMovement\",\"relationName\":\"ProductToStockMovement\"},{\"name\":\"serviceOrderItems\",\"kind\":\"object\",\"type\":\"ServiceOrderProduct\",\"relationName\":\"ProductToServiceOrderProduct\"}],\"dbName\":\"products\"},\"Service\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"estimatedTimeMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mechanicCommission\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToService\"},{\"name\":\"serviceOrderServices\",\"kind\":\"object\",\"type\":\"ServiceOrderService\",\"relationName\":\"ServiceToServiceOrderService\"}],\"dbName\":\"services\"},\"StockMovement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"movementType\",\"kind\":\"enum\",\"type\":\"MovementType\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalValue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"documentNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToStockMovement\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StockMovementToUser\"}],\"dbName\":\"stock_movements\"},\"ServiceOrder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehicleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responsibleEmployeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expectedDeliveryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"vehicleMileage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reportedProblem\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"executedServices\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"internalNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ServiceOrderStatus\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"Priority\"},{\"name\":\"totalValue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discountValue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"finalValue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"warrantyDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToServiceOrder\"},{\"name\":\"vehicle\",\"kind\":\"object\",\"type\":\"Vehicle\",\"relationName\":\"ServiceOrderToVehicle\"},{\"name\":\"responsibleEmployee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"ResponsibleEmployee\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"ServiceOrderService\",\"relationName\":\"ServiceOrderToServiceOrderService\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"ServiceOrderProduct\",\"relationName\":\"ServiceOrderToServiceOrderProduct\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"SaleToServiceOrder\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ServiceOrderToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"service_orders\"},\"ServiceOrderService\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"additionalDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"executionDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"executionTimeMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ServiceStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"serviceOrder\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceOrderToServiceOrderService\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"ServiceToServiceOrderService\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ServiceOrderServiceEmployee\"}],\"dbName\":\"service_order_services\"},\"ServiceOrderProduct\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"additionalDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isApplied\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"applicationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"serviceOrder\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceOrderToServiceOrderProduct\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToServiceOrderProduct\"}],\"dbName\":\"service_order_products\"},\"PaymentMethod\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"PaymentType\"},{\"name\":\"feePercent\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"receiveDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"receivables\",\"kind\":\"object\",\"type\":\"Receivable\",\"relationName\":\"PaymentMethodToReceivable\"}],\"dbName\":\"payment_methods\"},\"Sale\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"saleNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"saleDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"grossValue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discountValue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"netValue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SaleStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"serviceOrder\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"SaleToServiceOrder\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToSale\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SaleEmployee\"},{\"name\":\"receivables\",\"kind\":\"object\",\"type\":\"Receivable\",\"relationName\":\"ReceivableToSale\"}],\"dbName\":\"sales\"},\"Receivable\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"saleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethodId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"installmentNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paymentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ReceivableStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sale\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"ReceivableToSale\"},{\"name\":\"paymentMethod\",\"kind\":\"object\",\"type\":\"PaymentMethod\",\"relationName\":\"PaymentMethodToReceivable\"}],\"dbName\":\"receivables\"},\"AccountPayable\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supplierId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"PayableCategory\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paymentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PayableStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"supplier\",\"kind\":\"object\",\"type\":\"Supplier\",\"relationName\":\"AccountPayableToSupplier\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountPayableUser\"}],\"dbName\":\"accounts_payable\"},\"Appointment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehicleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointmentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expectedEndDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"requestedService\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AppointmentStatus\"},{\"name\":\"reminderSent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"AppointmentToCustomer\"},{\"name\":\"vehicle\",\"kind\":\"object\",\"type\":\"Vehicle\",\"relationName\":\"AppointmentToVehicle\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AppointmentUser\"}],\"dbName\":\"appointments\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

